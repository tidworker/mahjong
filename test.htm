<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Let's Write</title>
    <style>
        body, html {
            flex-direction: column;
            background-color: #F2F2F2;
            margin: 0;
            padding: 0;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
        }
        #container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        #grid {
            display: grid;
            grid-template-columns: repeat(100, 3px);
            grid-template-rows: repeat(100, 3px);
        }
        .cell {
            width: 3px;
            height: 3px;
            background-color: transparent;
            box-sizing: border-box;
        }
        .lettera, .letterA, .letterb, .letterB, .letterc, .letterC, .letterd, .letterD, .lettere, .letterE,
        .letterf, .letterF, .letterg, .letterG, .letterh, .letterH, .letteri, .letterI, .letterj, .letterJ,
        .letterk, .letterK, .letterl, .letterL, .letterm, .letterM, .lettern, .letterN, .lettero, .letterO,
        .letterp, .letterP, .letterq, .letterQ, .letterr, .letterR, .letters, .letterS, .lettert, .letterT,
        .letteru, .letterU, .letterv, .letterV, .letterw, .letterW, .letterx, .letterX, .lettery, .letterY,
        .letterz, .letterZ {
            background-color: #d3d3d3;
        }
        .current {
            background-color: #808080;
        }
        #percentage {
            margin-top: 0px;
            font-size: 5px;
            color: #F2F2F2;
        }
        #buttons img {
            cursor: pointer;
            margin: 12px;
        }
    </style>
</head>
<body>    
    <div id="container">
        <div id="grid"></div>
        <div id="percentage">已塗色百分比：0%</div>
    </div>

    <div class="image-row">
        <img src="jin.png" style="opacity: 0.3;">
        <img src="gon.png" style="opacity: 0.3;">
        <img src="ban.png" style="opacity: 0.3;">
        <img src="row.png" style="opacity: 0.3;">
        <img src="po.png" style="opacity: 0.3;">
        <img src="ro.png" style="opacity: 0.3;">
        <img src="mi.png" style="opacity: 0.3;">
        <img src="jinn.png" style="opacity: 0.3;">
    </div>
    <br>
    <br>
    <div id="buttons">
        <img src="back.png" onclick="history.back()">
        <img src="re.png" onclick="location.reload()">
        <img src="next.png" onclick="window.location.href='000002.htm'">
    </div>
    <br>
    <br>
    <img src="logo2.png">

    <script>
        const grid = document.getElementById('grid');
        const percentageDisplay = document.getElementById('percentage');
        const cells = [];
        const patternA = [
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000000000Aa00000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000000000aaaaa000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000000000aaaaaa00000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000000000aaaaaaaa000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000000000aaaaaaaaa00000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000000000aaaaaaaabB0000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000aaaaaaaabbbb000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000aaaaaaaabbbbbb0000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000000aaaaaaaabbbbbbbb000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000000aaaaaaa0bbbbbbbbb00000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000000aaaaaaa00bbbbbbbbbb0000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000000aaaaaa0000bbbbbbbbbb000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000aaaaaaa0000bbbbbbbbbbb00000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000aaaaaaa00000bbbbbbbbbbb0000000000000000000000000000000000000000000',
                '000000000000000000000000000000000aaaaaaa000000bbbbbbbbbbbb000000000000000000000000000000000000000000',
                '000000000000000000000000000000000aaaaaaa0000000bbbbbbbbbbbb00000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaa000000000bbbbbbbbbbbb0000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaa000000000bbbbbbbbbbbbb000000000000000000000000000000000000000',
                '0000000000000000000000000000000aaaaaaa00000000000bbbbbbbbbbbbb00000000000000000000000000000000000000',
                '0000000000000000000000000000000aaaaaaa000000000000bbbbbbbbbbbbbb000000000000000000000000000000000000',
                '000000000000000000000000000000aaaaaaa0000000000000bbbbbbbbbbbbbbb00000000000000000000000000000000000',
                '000000000000000000000000000000aaaaaaa00000000000000bbbbbbbbbbbbbbb0000000000000000000000000000000000',
                '00000000000000000000000000000aaaaaaaa000000000000000bbbbbbbbbbbbbbbb00000000000000000000000000000000',
                '00000000000000000000000000000aaaaaaa00000000000000000bbbbbbbbbbbbbbbb0000000000000000000000000000000',
                '0000000000000000000000000000aaaaaaaa000000000000000000bbbbbbbbbbbbbbbbb00000000000000000000000000000',
                '0000000000000000000000000000aaaaaaa0000000000000000000bbbbbbbbbbbbbbbbbb0000000000000000000000000000',
                '000000000000000000000000000aaaaaaaa00000000000000000000bbbbbbbbbbbbbbbbbbb00000000000000000000000000',
                '00000000000000000000000000aaaaaaaa0000000000000000000000bbbbbbbbbbbbbbbbbbbb000000000000000000000000',
                '00000000000000000000000000aaaaaaaa000000000000cccccc00000bbbbbbbbbbbbbbbbbbbbb0000000000000000000000',
                '0000000000000000000000000aaaaaaaa0000000000cccccccccc00000bbbbbbbbbbbbbbbbbbbbbb00000000000000000000',
                '000000000000000000000000aaaaaaaaa000000cccccccccccccc000000bbbbbbbbbbbbbbbbbbbbbbbb00000000000000000',
                '00000000000000000000000aaaaaaaaaaccccccccccccccccccccc000000bbbbbbbbbbbbbbbbbbbbbbbbb000000000000000',
                '00000000000000000000000aaaaaaaaacccccccccccccccccccccc0000000bbbbbbbbbbbbbbbbbbbbbbbbbbb000000000000',
                '0000000000000000000000aaaaaaaaacccccccccccccccccccccc000000000bbbbbbbbbbbbbbbbbbbbbbbbbbbbbb00000000',
                '000000000000000000000aaaaaaaaaCccccccccccccccccccccc00000000000bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb00000',
                '00000000000000000000aaaaaaaaa0ccccccccccccccccccc000000000000000bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb00',
                '0000000000000000000aaaaaaaaaa00cccccccccccccccee000000000000000000bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb',
                '000000000000000000aaaaaaaaaa0000ccccccccceEeeeee0000000000000000000bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb',
                '000000000000000000aaaaaaaaa00000000000eeeeeeeeee000000000000000000000bbbbbbbbbbbbbbbbbbbbbbbbbbbb000',
                '00000000000000000aaaaaaaaaa000000000000eeeeeeeee00000000000000000000000bbbbbbbbbbbbbbbbbbbbbbb000000',
                '0000000000000000aaaaaaaaaa00000000000000eeeeeeee00000000000000000000000000000bbb00000000000000000000',
                '000000000000000aaaaaaaaaa000000000000000eeeeeeee0000000000000000000000000000000000000000000000000000',
                '00000000000000aaaaaaaaaaa000000000000000eeeeeeee00000dddddd00000000000000000000000000000000000000000',
                '00000000000000aaaaaaaaa00000000000000000eeeeeeeedddddddddddd0000000000000000000000000000000000000000',
                '0000000000000aaaaaaaaa000000000000000000eeeeddddddddddddddddd000000000000000000000000000000000000000',
                '000000000000aaaaaaaaa000000000000000000dddddddddddddddddddddd000000000000000000000000000000000000000',
                '00000000000aaaaaaaaa000000000000000000ddddddddddddddddddddddd000000000000000000000000000000000000000',
                '0000000000aaaaaaaaa00000000000000dddddddddddddddddddddddddddd000000000000000000000000000000000000000',
                '000000000aaaaaaaaa0000000000ddddddddddddddddddddddd000000ddd0000000000000000000000000000000000000000',
                '00000000aaaaaaaaa000000ddddddddddddddddddddddddee000000000000000000000000000000000000000000000000000',
                '0000000aaaaaaaa0000000Dddddddddddddddddddddeeeeee0000000Gg000000000000000000000000000000000000000000',
                '000000aaaaaaaa000000000dddddddddddddd000eeeeeeeee00000ggggggg000000000000000000000000000000000000000',
                '00000aaaaaaaa0000000000ddddddddddd0000000eeeeeeee00000gggggggg00000000000000000000000000000000000000',
                '00000aaaaaaa00000000000dddddddd0000000000eeeeeeee00000ggggggggg0000000000000000000000000000000000000',
                '0000aaaaaaa0000000000000dddd0000000000000eeeeeeee00000gggggggggg000000000000000000000000000000000000',
                '000aaaaaaa0000000000000000000000000000000eeeeeeee000000ggggggggg000000000000000000000000000000000000',
                '00aaaaaa000000000000000000000000000000000eeeeeeee00000gggggggggg000000000000000000000000000000000000',
                '0aaaaaa0000000000000000000000000000000000eeeeeeee00000gggggggggg000000000000000000000000000000000000',
                '0aaaaa00000000000000000000ffFffff00000000eeeeeeee0000gggggggggg0000000000000000000000000000000000000',
                '0aa00000000000000000000000ffffffffff00000eeeeeeee000ggggggggggg0000000000000000000000000000000000000',
                '0000000000000000000000000fffffffffff00000eeeeeeee000ggggggggg000000000000000000000000000000000000000',
                '0000000000000000000000000ffffffffff000000eeeeeeee00ggggggggg0000000000000000000000000000000000000000',
                '00000000000000000000000000fffffffff000000eeeeeeee0ggggggggg00000000000000000000000000000000000000000',
                '00000000000000000000000000fffffffff000000eeeeeeeegggggggg0000000000000000000000000000000000000000000',
                '000000000000000000000000000ffffffff000000eeeeeeeeggggggg00000000000000000000000000000000000000000000',
                '000000000000000000000000000ffffffff000000eeeeeeeeggggg0000000000000000000000000000000000000000000000',
                '000000000000000000000000000ffffffff000000eeeeeeeegggg00000000000000000000000000000000000000000000000',
                '0000000000000000000000000000ffffffff00000eeeeeeeegg0000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000ffffffff00000eeeeeeeeg00000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000fffffff00000eeeeeeee000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000fffff000000eeeeeee00000000000hhhhh000000000000000000000000000000000000',
                '00000000000000000000000000000000000000000eeeeeee000000hhhhhhhhhhhhh000000000000000000000000000000000',
                '00000000000000000000000000000000000000000eeeeeeehhhhhhhhhhhhhhhhhhhh00000000000000000000000000000000',
                '0000000000000000000000000000000000000000heeeeeeehhhhhhhhhhhhhhhhhhhhh0000000000000000000000000000000',
                '000000000000000000000000000000000000000hheeeeeehhhhhhhhhhhhhhhhhhhhhhh000000000000000000000000000000',
                '0000000000000000000000000000000000hhhhhhhheeeeehhhhhhhhhhhhhhhhhhhhhhh000000000000000000000000000000',
                '000000000000000000000000000hhhhhhhhhhhhhhheeeeehhhhhhhhhhhhhhhhhhhhhhhh00000000000000000000000000000',
                '0000000000000000000000hhhhhhhhhhhhhhhhhhhhheeeehhhhhhhhhhhhhhhhhhhhhhhh00000000000000000000000000000',
                '000000000000000000hhhhhhhhhhhhhhhhhhhhhhhhheeehhhhhhhh000000000hhhhhhh000000000000000000000000000000',
                '000000000000000000hhhhhhhhhhhhhhhhhhhhhhhhhheehhh000000000000000000hh0000000000000000000000000000000',
                '000000000000000000Hhhhhhhhhhhhhhhhhhhhhhhhh000000000000000000000000000000000000000000000000000000000',
                '000000000000000000hhhhhhhhhhhhhhhhhhh000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000hhhhhhhhhhhhh00000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000hhhhhhh00000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
        ];

        let totalLetters = Array(52).fill(0);
        let filledLetters = Array(52).fill(0);
        let currentLetterIndex = 0; // 當前字母索引
        let canPaint = false;
        let completedLetters = new Set();
        let isPainting = false; // 是否正在塗色

        function initializeGrid() {
            grid.innerHTML = '';
            for (let i = 0; i < 100; i++) {
                cells[i] = [];
                for (let j = 0; j < 100; j++) {
                    const cell = document.createElement('div');
                    cell.className = 'cell';
                    const letter = patternA[i % patternA.length][j];
                    if (letter !== '0' && letter !== '.') {
                        cell.classList.add(`letter${letter}`);
                        if (letter.match(/[A-Za-z]/)) {
                            totalLetters[getIndex(letter)]++; // 計算每個字母的總數
                        }
                    }
                    cells[i][j] = cell;
                    grid.appendChild(cell);
                }
            }
            updateCurrentLetterColor();
        }

        function getIndex(letter) {
            const code = letter.charCodeAt(0);
            if (code >= 65 && code <= 90) {
                return code - 65;
            } else {
                return code - 71;
            }
        }

        function updateCurrentLetterColor() {
            const currentLetter = String.fromCharCode(currentLetterIndex < 26 ? 65 + currentLetterIndex : 97 + currentLetterIndex - 26);
            document.querySelectorAll(`.letter${currentLetter}, .letter${currentLetter.toLowerCase()}`).forEach(cell => {
                cell.classList.add('current');
            });
        }

        function removeCurrentLetterColor() {
            const currentLetter = String.fromCharCode(currentLetterIndex < 26 ? 65 + currentLetterIndex : 97 + currentLetterIndex - 26);
            document.querySelectorAll(`.letter${currentLetter}, .letter${currentLetter.toLowerCase()}`).forEach(cell => {
                cell.classList.remove('current');
            });
        }

        grid.addEventListener('mousedown', handleMouse);
        grid.addEventListener('mousemove', function(e) {
            if (e.buttons === 1) {
                handleMouse(e);
            }
        });

        grid.addEventListener('touchstart', handleTouch, { passive: false });
        grid.addEventListener('touchmove', handleTouch, { passive: false });

        function handleTouch(e) {
            e.preventDefault();
            const touch = e.touches[0];
            const rect = grid.getBoundingClientRect();
            const x = Math.floor((touch.clientX - rect.left) / 3);
            const y = Math.floor((touch.clientY - rect.top) / 3);
            handlePainting(x, y);
        }

        function handleMouse(e) {
            const rect = grid.getBoundingClientRect();
            const x = Math.floor((e.clientX - rect.left) / 3);
            const y = Math.floor((e.clientY - rect.top) / 3);
            handlePainting(x, y);
        }

        function handlePainting(x, y) {
            if (!canPaint) {
                fillCircle(x, y, 10, true); // 檢查是否能夠塗色
            }
            if (canPaint) {
                fillCircle(x, y, 10); // 開始塗色
            }
        }

        function fillCircle(cx, cy, radius, checkOnly = false) {
            let painted = false;
            for (let i = -radius; i <= radius; i++) {
                for (let j = -radius; j <= radius; j++) {
                    if (i * i + j * j <= radius * radius) {
                        const nx = cx + j;
                        const ny = cy + i;
                        if (nx >= 0 && nx < 100 && ny >= 0 && ny < 100) {
                            const targetCell = cells[ny][nx];
                            const letter = String.fromCharCode(currentLetterIndex < 26 ? 65 + currentLetterIndex : 97 + currentLetterIndex - 26);
                            if (checkOnly) {
                                if (targetCell.classList.contains(`letter${letter}`)) {
                                    canPaint = true;
                                    return;
                                }
                            } else {
                                if ((targetCell.classList.contains(`letter${letter}`) || targetCell.classList.contains(`letter${letter.toLowerCase()}`)) && !targetCell.style.backgroundColor) {
                                    targetCell.style.backgroundColor = '#000000';
                                    if (targetCell.classList.contains(`letter${letter}`) || targetCell.classList.contains(`letter${letter.toLowerCase()}`)) {
                                        filledLetters[getIndex(letter)]++;
                                        painted = true;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (painted) {
                isPainting = true; // 開始塗色
                updatePercentage();
            }
        }

        function updatePercentage() {
            const currentLetter = String.fromCharCode(currentLetterIndex < 26 ? 65 + currentLetterIndex : 97 + currentLetterIndex - 26);
            const totalCurrentLetter = totalLetters[getIndex(currentLetter)];
            const totalLowercaseLetter = totalLetters[getIndex(currentLetter.toLowerCase())];
            const totalCurrentFilled = filledLetters[getIndex(currentLetter)];
            const totalLowercaseFilled = filledLetters[getIndex(currentLetter.toLowerCase())];
            const totalPercentageColored = ((totalCurrentFilled + totalLowercaseFilled) / (totalCurrentLetter + totalLowercaseLetter)) * 100;

            percentageDisplay.textContent = `已塗色百分比：${totalPercentageColored.toFixed(2)}%`;

            if (totalPercentageColored >= 95 && !completedLetters.has(currentLetter)) {
                completedLetters.add(currentLetter);
                const nextLetter = String.fromCharCode(currentLetterIndex < 25 ? 65 + currentLetterIndex + 1 : 97 + currentLetterIndex - 25);
                document.querySelectorAll(`.letter${nextLetter}, .letter${nextLetter.toLowerCase()}`).forEach(cell => {
                    cell.classList.add('current');
                });
                if (currentLetterIndex < 51) {
                    document.addEventListener('mousedown', nextLetterHandler, { once: true });
                    document.addEventListener('touchstart', nextLetterHandler, { once: true });
                }
            }
            if (!isPainting) { // 只有在不塗色時才更新到下一個字母
                canPaint = false;
            }
        }

        function nextLetterHandler() {
            if (currentLetterIndex < 51) {
                currentLetterIndex++;
                updateCurrentLetterColor();
                canPaint = false;
                isPainting = false; // 重置塗色狀態
            }
        }

        // 禁止滾動刷新頁面
        document.addEventListener('touchmove', function(event) {
            event.preventDefault();
        }, { passive: false });

        // 初始化遊戲
        initializeGrid();
    </script>
</body>
</html>
