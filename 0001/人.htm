<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Let's Write</title>
    <style>
        body, html {
            flex-direction: column;
            background-color: #F2F2F2;
            margin: 0;
            padding: 0;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
        }
        #container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        #grid {
            display: grid;
            grid-template-columns: repeat(100, 4px);
            grid-template-rows: repeat(100, 4px);
        }
        .cell {
            width: 4px;
            height: 4px;
            background-color: transparent;
            box-sizing: border-box;
        }
        .lettera, .letterb, .letterc, .letterd, .lettere, .letterf, .letterg, .letterh, .letteri, .letterj,
        .letterk, .letterl, .letterm, .lettern, .lettero, .letterp, .letterq, .letterr, .letters, .lettert,
        .letteru, .letterv, .letterw, .letterx, .lettery {
            background-color: #d3d3d3;
        }
        .letterz {
            background-color: #191919;
        }
        .current {
            background-color: #808080;
        }
        #percentage {
            margin-top: 0px;
            font-size: 5px;
            color: #F2F2F2;
        }
        #buttons img {
            cursor: pointer;
            margin: 12px;
        }
        #nextButton {
            display: none; /* 隐藏按钮 */
        }
    </style>
</head>
<body>    
    001
    <div id="container">
        <div id="grid"></div>
        <div id="percentage">已塗色百分比：0%</div>
        <button id="nextButton" onclick="window.parent.postMessage('nextPage', '*')">Next</button>
    </div>

    <script>
        const grid = document.getElementById('grid');
        const percentageDisplay = document.getElementById('percentage');
        const cells = [];
        const patternA = [
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000aaaa000000000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000aaaaaaa000000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000aaaaaaaa00000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000aaaaaaaaa0000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000aaaaaaaaa0000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000aaaaaaaa00000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaaaa00000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaaaa00000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaaa000000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaaa000000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaaaa00000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000aaaaaaaa00000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000aaaaaaaa00000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000aaaaaaaa00000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000000aaaaaaa000000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaaa000000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaaa000000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaaa000000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaaa000000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaaa000000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaa0000000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaa0000000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaa0000000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000000aaaaaaa0000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000aaaaaaaa0000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000aaaaaaa00000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000aaaaaaa00000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000aaaaaaa00000000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000aaaaaaaa00000000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000aaaaaaaa00000000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000aaaaaaabb0000000000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000000aaaaaaabbb000000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000aaaaaaabbbbbb0000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000aaaaaaabbbbbb0000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000aaaaaabbbbbbbb000000000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000000aaaaaabbbbbbbbb00000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000aaaaaa00bbbbbbbbb0000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000aaaaaa000bbbbbbbb0000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000aaaaaa00000bbbbbbbb000000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000aaaaaa00000bbbbbbbbb00000000000000000000000000000000000000000000000000000',
                '000000000000000000000000000aaaaa0000000bbbbbbbbb0000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000aaaaaa00000000bbbbbbbbb000000000000000000000000000000000000000000000000000',
                '00000000000000000000000000aaaaa0000000000bbbbbbbbb00000000000000000000000000000000000000000000000000',
                '0000000000000000000000000aaaaa000000000000bbbbbbbbb0000000000000000000000000000000000000000000000000',
                '0000000000000000000000000aaaaa000000000000bbbbbbbbbb000000000000000000000000000000000000000000000000',
                '0000000000000000000000000aaaa00000000000000bbbbbbbbbb00000000000000000000000000000000000000000000000',
                '000000000000000000000000aaaaa000000000000000bbbbbbbbbb0000000000000000000000000000000000000000000000',
                '000000000000000000000000aaaa00000000000000000bbbbbbbbbb000000000000000000000000000000000000000000000',
                '00000000000000000000000aaaaa000000000000000000bbbbbbbbbb00000000000000000000000000000000000000000000',
                '00000000000000000000000aaaa00000000000000000000bbbbbbbbbbb000000000000000000000000000000000000000000',
                '00000000000000000000000aaaa00000000000000000000bbbbbbbbbbbb00000000000000000000000000000000000000000',
                '0000000000000000000000aaaa0000000000000000000000bbbbbbbbbbbbb000000000000000000000000000000000000000',
                '0000000000000000000000aaaa00000000000000000000000bbbbbbbbbbbbbb0000000000000000000000000000000000000',
                '000000000000000000000aaaa0000000000000000000000000bbbbbbbbbbbbbbb00000000000000000000000000000000000',
                '000000000000000000000aaa000000000000000000000000000bbbbbbbbbbbbbbbb000000000000000000000000000000000',
                '00000000000000000000aaa00000000000000000000000000000bbbbbbbbbbbbbbbbb0000000000000000000000000000000',
                '00000000000000000000aa0000000000000000000000000000000bbbbbbbbbbbbbbbbbb00000000000000000000000000000',
                '0000000000000000000aa0000000000000000000000000000000000bbbbbbbbbbbbbbbbbbb00000000000000000000000000',
                '0000000000000000000a000000000000000000000000000000000000bbbbbbbbbbbbbbbbbbbb000000000000000000000000',
                '000000000000000000aa00000000000000000000000000000000000000bbbbbbbbbbbbbbbbbbbb0000000000000000000000',
                '000000000000000000a00000000000000000000000000000000000000000bbbbbbbbbbbbbbbbbbbbb0000000000000000000',
                '000000000000000000000000000000000000000000000000000000000000000bbbbbbbbbbbbbbbbbbbb00000000000000000',
                '000000000000000000000000000000000000000000000000000000000000000000000bbbbbbbbbbbbbbbb000000000000000',
                '00000000000000000000000000000000000000000000000000000000000000000000000000bbbbbbbbbbb000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000bbbbbbb00000000000000',
                '00000000000000000000000000000000000000000000000000000000000000000000000000000000000bbb00000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
                '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
        ];

        let totalLetters = Array(26).fill(0);
        let filledLetters = Array(26).fill(0);
        let currentLetterIndex = 0; // 當前字母索引
        let canPaint = true;
        let completedLetters = new Set();
        let allLetters = new Set();

        function initializeGrid() {
            grid.innerHTML = '';
            // 這裡加載完整矩陣
            for (let i = 0; i < 100; i++) {
                cells[i] = [];
                for (let j = 0; j < 100; j++) {
                    const cell = document.createElement('div');
                    cell.className = 'cell';
                    const letter = patternA[i][j];
                    if (letter !== '0') {
                        cell.classList.add(`letter${letter}`);
                        if (letter === 'z') {
                            cell.style.backgroundColor = '#191919';
                        } else {
                            totalLetters[letter.charCodeAt(0) - 97]++; // 計算每個字母的總數
                            allLetters.add(letter); // 添加到出現的字母集合
                        }
                    }
                    cells[i][j] = cell;
                    grid.appendChild(cell);
                }
            }
            updateCurrentLetterColor();
        }

        function updateCurrentLetterColor() {
            const currentLetter = String.fromCharCode(97 + currentLetterIndex);
            document.querySelectorAll(`.letter${currentLetter}`).forEach(cell => {
                cell.classList.add('current');
            });
        }

        function removeCurrentLetterColor() {
            const currentLetter = String.fromCharCode(97 + currentLetterIndex);
            document.querySelectorAll(`.letter${currentLetter}`).forEach(cell => {
                cell.classList.remove('current');
            });
        }

        grid.addEventListener('mousedown', handleMouse);
        grid.addEventListener('mousemove', function(e) {
            if (e.buttons === 1) {
                handleMouse(e);
            }
        });

        grid.addEventListener('touchstart', handleTouch, { passive: false });
        grid.addEventListener('touchmove', handleTouch, { passive: false });

        function handleTouch(e) {
            e.preventDefault();
            const touch = e.touches[0];
            const rect = grid.getBoundingClientRect();
            const x = Math.floor((touch.clientX - rect.left) / 4);
            const y = Math.floor((touch.clientY - rect.top) / 4);
            if (canPaint) {
                fillCircle(x, y, 10); // 將半徑設置為10，增加筆刷大小
            }
        }

        function handleMouse(e) {
            const rect = grid.getBoundingClientRect();
            const x = Math.floor((e.clientX - rect.left) / 4);
            const y = Math.floor((e.clientY - rect.top) / 4);
            if (canPaint) {
                fillCircle(x, y, 10); // 將半徑設置為10，增加筆刷大小
            }
        }

        function fillCircle(cx, cy, radius) {
            let painted = false;
            for (let i = -radius; i <= radius; i++) {
                for (let j = -radius; j <= radius; j++) {
                    if (i * i + j * j <= radius * radius) {
                        const nx = cx + j;
                        const ny = cy + i;
                        if (nx >= 0 && nx < 100 && ny >= 0 && ny < 100) {
                            const targetCell = cells[ny][nx];
                            const letter = String.fromCharCode(97 + currentLetterIndex);
                            if (targetCell.classList.contains(`letter${letter}`) && !targetCell.style.backgroundColor) {
                                targetCell.style.backgroundColor = '#000000';
                                filledLetters[currentLetterIndex]++;
                                painted = true;
                            }
                        }
                    }
                }
            }
            if (painted) {
                updatePercentage();
            }
        }

        function updatePercentage() {
            const percentageColored = (filledLetters[currentLetterIndex] / totalLetters[currentLetterIndex]) * 100;
            percentageDisplay.textContent = `已塗色百分比：${percentageColored.toFixed(2)}%`;
            if (percentageColored >= 95 && !completedLetters.has(String.fromCharCode(97 + currentLetterIndex))) {
                completedLetters.add(String.fromCharCode(97 + currentLetterIndex));
                // 填滿當前字母
                fillCurrentLetter();
                canPaint = true;
                const nextLetter = String.fromCharCode(97 + currentLetterIndex + 1);
                document.querySelectorAll(`.letter${nextLetter}`).forEach(cell => {
                    cell.classList.add('current');
                });
                if (currentLetterIndex < 25) {
                    document.addEventListener('mousedown', nextLetterHandler, { once: true });
                    document.addEventListener('touchstart', nextLetterHandler, { once: true });
                }
                // 如果所有出現的字母都完成塗色，觸發下一頁
                if (completedLetters.size === allLetters.size) {
                    document.getElementById('nextButton').click();
                }
            }
        }

        function fillCurrentLetter() {
            const currentLetter = String.fromCharCode(97 + currentLetterIndex);
            document.querySelectorAll(`.letter${currentLetter}`).forEach(cell => {
                if (!cell.style.backgroundColor) {
                    cell.style.backgroundColor = '#000000';
                    filledLetters[currentLetterIndex]++;
                }
            });
            updatePercentage();
        }

        function nextLetterHandler() {
            if (currentLetterIndex < 25) {
                removeCurrentLetterColor();
                currentLetterIndex++;
                updateCurrentLetterColor();
                canPaint = true;
            }
        }

        // 禁止滾動刷新頁面
        document.addEventListener('touchmove', function(event) {
            event.preventDefault();
        }, { passive: false });

        // 初始化遊戲
        initializeGrid();
    </script>
</body>
</html>
