<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Let's Write</title>
    <style>
        body, html {
            display: flex;
            flex-direction: column;
            background-color: #F2F2F2;
            margin: 0;
            padding: 0;
            overflow: hidden;
            justify-content: center;
            align-items: center;
            height: 100%;
        }
        #container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        #grid {
            display: grid;
            grid-template-columns: repeat(100, 3px);
            grid-template-rows: repeat(100, 3px);
        }
        .cell {
            width: 3px;
            height: 3px;
            background-color: transparent;
            box-sizing: border-box;
        }
        .lettera, .letterA, .letterb, .letterB, .letterc, .letterC, .letterd, .letterD, .lettere, .letterE,
        .letterf, .letterF, .letterg, .letterG, .letterh, .letterH, .letteri, .letterI, .letterj, .letterJ,
        .letterk, .letterK, .letterl, .letterL, .letterm, .letterM, .lettern, .letterN, .lettero, .letterO,
        .letterp, .letterP, .letterq, .letterQ, .letterr, .letterR, .letters, .letterS, .lettert, .letterT,
        .letteru, .letterU, .letterv, .letterV, .letterw, .letterW, .letterx, .letterX, .lettery, .letterY,
        .letterz, .letterZ {
            background-color: #d3d3d3;
        }
        .current {
            background-color: #808080;
        }
        #percentage {
            margin-top: 0px;
            font-size: 5px;
            color: #F2F2F2;
        }
        #buttons img {
            cursor: pointer;
            margin: 12px;
        }
    </style>
</head>
<body>
    <div id="container">
        <div id="grid"></div>
        <div id="percentage">已塗色百分比：0%</div>
    </div>

    <div class="image-row">
        <img src="jin.png" style="opacity: 0.3;">
        <img src="gon.png" style="opacity: 0.3;">
        <img src="ban.png" style="opacity: 0.3;">
        <img src="row.png" style="opacity: 0.3;">
        <img src="po.png" style="opacity: 0.3;">
        <img src="ro.png" style="opacity: 0.3;">
        <img src="mi.png" style="opacity: 0.3;">
        <img src="jinn.png" style="opacity: 0.3;">
    </div>
    <br>
    <br>
    <div id="buttons">
        <img src="back.png" onclick="history.back()">
        <img src="re.png" onclick="location.reload()">
        <img src="next.png" onclick="window.location.href='000002.htm'">
    </div>
    <br>
    <br>
    <img src="logo2.png">

    <script>
        const grid = document.getElementById('grid');
        const percentageDisplay = document.getElementById('percentage');
        const cells = [];
        const patternA = [
            '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
            '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
            '....................................................................................................',
            '....................................................................................................',
            '000000000000000000000000000000000000000Aa00000000000000000000000000000000000000000000000000000000000',
            '00000000000000000000000000000000000000aaaaa000000000000000000000000000000000000000000000000000000000',
            '00000000000000000000000000000000000000aaaaaa00000000000000000000000000000000000000000000000000000000',
            '00000000000000000000000000000000000000aaaaaaaa000000000000000000000000000000000000000000000000000000',
            '00000000000000000000000000000000000000aaaaaaaaa00000000000000000000000000000000000000000000000000000',
            '00000000000000000000000000000000000000aaaaaaaabB0000000000000000000000000000000000000000000000000000',
            '0000000000000000000000000000000000000aaaaaaaabbbb000000000000000000000000000000000000000000000000000',
            '0000000000000000000000000000000000000aaaaaaaabbbbbb0000000000000000000000000000000000000000000000000',
            '000000000000000000000000000000000000aaaaaaaabbbbbbbb000000000000000000000000000000000000000000000000',
            '000000000000000000000000000000000000aaaaaaa0bbbbbbbbb00000000000000000000000000000000000000000000000',
            '00000000000000000000000000000000000aaaaaaa00bbbbbbbbbb0000000000000000000000000000000000000000000000',
            '00000000000000000000000000000000000aaaaaa0000bbbbbbbbbb000000000000000000000000000000000000000000000',
            '0000000000000000000000000000000000aaaaaaa0000bbbbbbbbbbb00000000000000000000000000000000000000000000',
            '0000000000000000000000000000000000aaaaaaa00000bbbbbbbbbbb0000000000000000000000000000000000000000000',
            '000000000000000000000000000000000aaaaaaa000000bbbbbbbbbbbb000000000000000000000000000000000000000000',
            '000000000000000000000000000000000aaaaaaa0000000bbbbbbbbbbbb00000000000000000000000000000000000000000',
            '00000000000000000000000000000000aaaaaaa000000000bbbbbbbbbbbb0000000000000000000000000000000000000000',
            '00000000000000000000000000000000aaaaaaa000000000bbbbbbbbbbbbb000000000000000000000000000000000000000',
            '0000000000000000000000000000000aaaaaaa00000000000bbbbbbbbbbbbb00000000000000000000000000000000000000'
        ];

        let totalLetters = Array(52).fill(0);
        let filledLetters = Array(52).fill(0);
        let currentLetterIndex = 0; // 當前字母索引
        let canPaint = false;
        let completedLetters = new Set();
        let isPainting = false; // 是否正在塗色

        function initializeGrid() {
            grid.innerHTML = '';
            const numRows = patternA.length;
            for (let i = 0; i < numRows; i++) {
                cells[i] = [];
                for (let j = 0; j < 100; j++) {
                    const cell = document.createElement('div');
                    cell.className = 'cell';
                    const letter = patternA[i][j];
                    if (letter !== '0' && letter !== '.') {
                        cell.classList.add(`letter${letter}`);
                        if (letter.match(/[A-Za-z]/)) {
                            totalLetters[getIndex(letter)]++; // 計算每個字母的總數
                        }
                    }
                    cells[i][j] = cell;
                    grid.appendChild(cell);
                }
            }
            updateCurrentLetterColor();
        }

        function getIndex(letter) {
            const code = letter.charCodeAt(0);
            if (code >= 65 && code <= 90) {
                return code - 65;
            } else {
                return code - 71;
            }
        }

        function updateCurrentLetterColor() {
            const currentLetter = String.fromCharCode(currentLetterIndex < 26 ? 65 + currentLetterIndex : 97 + currentLetterIndex - 26);
            document.querySelectorAll(`.letter${currentLetter}, .letter${currentLetter.toLowerCase()}`).forEach(cell => {
cell.classList.add('current');
});
}
            function removeCurrentLetterColor() {
        const currentLetter = String.fromCharCode(currentLetterIndex < 26 ? 65 + currentLetterIndex : 97 + currentLetterIndex - 26);
        document.querySelectorAll(`.letter${currentLetter}, .letter${currentLetter.toLowerCase()}`).forEach(cell => {
            cell.classList.remove('current');
        });
    }

    function fillCell(x, y) {
        const letter = String.fromCharCode(currentLetterIndex < 26 ? 65 + currentLetterIndex : 97 + currentLetterIndex - 26);
        const targetCell = cells[y][x];
        if ((targetCell.classList.contains(`letter${letter}`) || targetCell.classList.contains(`letter${letter.toLowerCase()}`)) && !targetCell.style.backgroundColor) {
            targetCell.style.backgroundColor = '#000000';
            if (targetCell.classList.contains(`letter${letter}`) || targetCell.classList.contains(`letter${letter.toLowerCase()}`)) {
                filledLetters[getIndex(letter)]++;
            }
            updatePercentage();
        }
    }

    function updatePercentage() {
        const currentLetter = String.fromCharCode(currentLetterIndex < 26 ? 65 + currentLetterIndex : 97 + currentLetterIndex - 26);
        const totalCurrentLetter = totalLetters[getIndex(currentLetter)];
        const totalLowercaseLetter = totalLetters[getIndex(currentLetter.toLowerCase())];
        const totalCurrentFilled = filledLetters[getIndex(currentLetter)];
        const totalLowercaseFilled = filledLetters[getIndex(currentLetter.toLowerCase())];
        const totalPercentageColored = ((totalCurrentFilled + totalLowercaseFilled) / (totalCurrentLetter + totalLowercaseLetter)) * 100;

        percentageDisplay.textContent = `已塗色百分比：${totalPercentageColored.toFixed(2)}%`;

        if (totalPercentageColored >= 100 && !completedLetters.has(currentLetter)) {
            completedLetters.add(currentLetter);
            if (currentLetterIndex === 25) { // 當前字母為 'Z'
                setTimeout(() => {
                    window.location.href = '000002.htm';
                }, 1000); // 1秒後跳轉頁面
            }
            canPaint = false;
            const nextLetter = String.fromCharCode(currentLetterIndex < 25 ? 65 + currentLetterIndex + 1 : 97 + currentLetterIndex - 25);
            document.querySelectorAll(`.letter${nextLetter}, .letter${nextLetter.toLowerCase()}`).forEach(cell => {
                cell.classList.add('current');
            });
            if (currentLetterIndex < 51) {
                document.addEventListener('mousedown', nextLetterHandler, { once: true });
                document.addEventListener('touchstart', nextLetterHandler, { once: true });
            }
        }
    }

    function nextLetterHandler() {
        if (currentLetterIndex < 51) {
            currentLetterIndex++;
            updateCurrentLetterColor();
            canPaint = true;
            isPainting = false;
        }
    }

    // 初始化遊戲
    initializeGrid();

    if (window.DeviceOrientationEvent) {
        window.addEventListener('deviceorientation', function(event) {
            const gamma = event.gamma; // 左右翻轉，範圍 [-90, 90]
            const beta = event.beta;   // 前後翻轉，範圍 [-180, 180]

            if (!isPainting && (Math.abs(gamma) > 20 || Math.abs(beta) > 20)) {
                isPainting = true;
                const currentLetter = String.fromCharCode(65 + currentLetterIndex);
                const startCell = document.querySelector(`.letter${currentLetter}`);
                if (startCell) {
                    const rect = grid.getBoundingClientRect();
                    const cellRect = startCell.getBoundingClientRect();
                    const startX = Math.floor((cellRect.left - rect.left) / 3);
                    const startY = Math.floor((cellRect.top - rect.top) / 3);
                    fillCell(startX, startY);
                }
            }

            if (isPainting) {
                const rect = grid.getBoundingClientRect();
                const x = (gamma + 90) / 180 * rect.width;
                const y = (beta + 90) / 180 * rect.height;
                fillCell(Math.floor(x / 3), Math.floor(y / 3));
            }
        }, true);
    } else {
        alert("此設備不支持 DeviceOrientation");
    }
</script>
</body>
</html>
